name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  py:
    name: Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # honors your .python-version if present
          python-version-file: .python-version

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Sync deps
        run: uv sync --locked --dev

      - name: Run tests (test.sh)
        run: bash ./test.sh

  js:
    name: JavaScript
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for package.json
        id: has_js
        run: |
          if [ -f "js/package.json" ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Node
        if: steps.has_js.outputs.present == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: js/package-lock.json

      - name: Install
        if: steps.has_js.outputs.present == 'true'
        working-directory: js
        run: |
          if [ -f "package-lock.json" ]; then npm ci;
          else npm i --no-audit --no-fund; fi

      - name: Test
        if: steps.has_js.outputs.present == 'true'
        working-directory: js
        run: npm test --silent

  rs:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for Cargo.toml
        id: has_rs
        run: |
          if [ -f "rs/Cargo.toml" ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Rust
        if: steps.has_rs.outputs.present == 'true'
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        if: steps.has_rs.outputs.present == 'true'
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            rs -> target

      - name: Test
        if: steps.has_rs.outputs.present == 'true'
        working-directory: rs
        run: |
          if [ -f "Cargo.lock" ]; then
            cargo test --locked --color always
          else
            cargo test --color always
          fi

  all:
    name: All languages green
    runs-on: ubuntu-latest
    needs: [py, js, rs]
    steps:
      - run: echo "All good âœ…"
